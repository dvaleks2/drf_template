apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx
  namespace: __NAMESPACE_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      run: __CI_PROJECT_NAME__-nginx
      app: __CI_PROJECT_NAME__-nginx
  template:
    metadata:
      labels:
        run: __CI_PROJECT_NAME__-nginx
        app: __CI_PROJECT_NAME__-nginx
    spec:
      containers:
      - name: __CI_PROJECT_NAME__-nginx
        image: __REPOSITORY_IMAGE_NGINX__
        ports:
        - containerPort: 80
        volumeMounts:
        - name: __CI_PROJECT_NAME__-nginx
          mountPath: /var/www/app
      volumes:
      - name: __CI_PROJECT_NAME__-nginx
        persistentVolumeClaim:
          claimName: __NAMESPACE_NAME__-claim-nginx
      imagePullSecrets:
      - name: gitlab-registry

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: __NAMESPACE_NAME__-nginx-data
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/ubuntu/kuber_project_data/__NAMESPACE_NAME__"
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: __NAMESPACE_NAME__-claim-nginx
  namespace: __NAMESPACE_NAME__
spec:
  volumeName: __NAMESPACE_NAME__-nginx-data
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
kind: Service
apiVersion: v1
metadata:
  name: project-name550-nginx
  namespace: __NAMESPACE_NAME__
spec:
  selector:
    app: __CI_PROJECT_NAME__-nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: __CI_PROJECT_NAME__-ingress
  namespace: __NAMESPACE_NAME__
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
spec:
  tls:
  - hosts:
    - onix-systems-project-name550-backend.staging.onix.ua
    secretName: project-name550-new-sert3
  rules:
  - host: onix-systems-project-name550-backend.staging.onix.ua
    http:
      paths:
      - backend:
          serviceName: project-name550-nginx
          servicePort: 80
